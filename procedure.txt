# **************************************************************************** #
# **************************************************************************** #
# **************************************************************************** #
# **************************************************************************** #
# **************************************************************************** #

--------------------V.2 :
•[Mis a jour]:
	- apt-get update : Permet de resynchroniser un fichier repertoriant les paquets disponibles
			   et sa source. Elle doit etre executee avant (upgrade) pour que apt-get connaisse
			   l'existence de nouvelles versions des paquets.

	- apt-get upgrade : Permet l'installation des versions les plus recentes de tous les paquets
			    presents sur le systeme.


--------------------V.3 :
•[Creer/ajouter un utilisateur non-root]:
	-adduser $username



•[SUDO](Substitute User DO) : Commande permettant a un administrateur systeme d'accorder a certains
			      utilisateur la possibilite de lancer une commande en tant qu'administrateur.

(commande suivante a effectuer en tant qu'administrateur)
*Installer SUDO ->			apt-get install sudo
*Ajouter un utilisateur à sudo->	adduser $username sudo


/****************************************************************************************************/


•[DHCP](Dynamic Host Configuration Protocol) : Protocole reseau dont le role est d'assurer la configuration
					       automatique des parametres IP d'une station ou d'une machine,
					       notamment en lui attribuant automatiquement une adresse IP
					       et un masque de sous-reseau.

[Configuration de l'adresse IP pour la rendre fixe]:
(commande suivante a effectuer en tant qu'administrateur)
*Ouvrir le fichier /etc/network/interfaces ->  sudo vim /etc/network/interfaces
*Modifier ces lignes			auto eth0
					iface eth0 inet dhcp

Par					iface enp0s3 inet static
					adress 10.11.93.93
					netmask 255.255.255.252
					gateway 10.11.254.254

*Redemarrer le serivce reseau ->	sudo service networking restart
*Ou la machine ->			sudo reboot


/****************************************************************************************************/


•[SSH](Secure SHell) : est à la fois un programme informatique et un protocole de communication sécurisé.

[Changer le port par defaut du service SSH et interdire l'utilisateur root de se connecter en SSH]
*Ouvrir le fichier sshd_config ->	sudo vim /etc/ssh/sshd_config
*Changer le port par défaut SSH (22)
#Port 22 ->				Port 2222(par exemple)

(les ports disponibles sont au nombre de 65 536(2^16), 16 premiers bits en partant de droite.
Les ports utilisés par défaut par le systeme sont de 0 a 1023, 22 étant le port par defaut du service SSH).

interdire l'utilisateur root de se connecter en SSH
#PermitRootLogin without-password ->	PermitRootLogin no

[Accès SSH avec publickey]
(A effectuer sur la machine locale)
*Generer une paire de clés SSH->	ssh-keygen
*Copier la cle sur le serveur
pour l'autoriation ->			ssh-copy-id wana@10.11.93.93 -p 2222
*Taper le mot de passe

*Ouvrir le fichier sshd_config ->	sudo vim /etc/ssh/sshd_config
#PasswordAuthentication yes ->		PasswordAuthentication no
#PubkeyAuthentication yes->		PubkeyAuthentication yes

*Redemarrer le service: sudo sevice ssh restart


/****************************************************************************************************/

[Firewall]

*Installer iptables-persistent
(version qui permet de rendre 
les modifications persistante) ->	sudo apt-get install iptables-persistent

*Ouvrir le fichier rules.v4 ->		sudo vim /etc/iptables/rules.v4
et configurer le firewall puis l'enregistrer (y ajouter les lignes suivantes) :

#flush : vide toutes les chaînes existantes
-F

#Supprime les chaînes personnelles
-X

#Politiques
-P INPUT DROP
-P FORWARD DROP
-P OUTPUT DROP

#Acceptation des connexions établies
-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
-A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT

#Refus des paquets invalides
-A INPUT -m state --state INVALID -j DROP
-A FORWARD -m state --state INVALID -j DROP
-A OUTPUT -m state --state INVALID -j DROP

#Autorisation du loopback (communication des éléments au sein du serveur)
-A INPUT -i lo -j ACCEPT
-A OUTPUT -o lo -j ACCEPT

#Connexions autorisées
-A OUTPUT -p tcp --dport 80 -j ACCEPT (pas nécessaire si http non utilisé)
-A INPUT -p tcp --dport 80 -j ACCEPT (pas nécessaire si http non utilisé)
-A OUTPUT -p tcp --dport 53 -j ACCEPT
-A OUTPUT -p udp --dport 53 -j ACCEPT
-A INPUT -p tcp --dport 443 -j ACCEPT (https : ligne à ajouter lors de la configuration SSL)

#SSH
-A INPUT -p tcp --dport 9393 -j ACCEPT


#Permettre au PSAD de détecter les activités
-A INPUT -j LOG (ligne à ajouter lors de la configuration PSAD)
-A FORWARD -j LOG (ligne à ajouter lors de la configuration PSAD)

*Redémmarer le service -> sudo service netfilter-persistent restart

*Vérifier le chargement des modifications -> sudo iptables -L

/****************************************************************************************************/

[Mettre en place une protection contre les DOS (Denial Of ServiceAttack)]

[Fail2ban] : Fail2ban est un framework de prévention contre les intrusions,
Fail2ban bloque les adresses IP appartenant à des hôtes qui tentent de casser
la sécurité du système, pendant une période configurable (mise en quarantaine).

*Installer fail2ban ->			sudo apt-get install fail2ban

*Copier le fichier jail.conf ->		sudo cp jail.conf jail.local (dans /etc/fail2ban/)
(le fichier jail.conf sera modifier à chaque mis à jour, donc pour un fichier fixe,
en créer un autre (jail.local)).

*Y ajouter/modifier ces lignes:

action = %(action_mwl)s
...
[sshd]
enabled = true
maxretry = 3
port = 2222
logpath = %(sshd_log)
backend = %(sshd_backend)s


/***************************************************************************************************/

[Mettre en place une protection contre les scans sur les ports ouverts de la VM]
(Scan : permet de trouver dans un délai très court, tous les ports ouverts sur une machine distante.)

[PSAD : Port Scan Attack Detector]

*Installer PSAD ->			sudo apt-get install psad

*Ajouter au fichier IPtables ces deux lignes ->
-A INPUT -j LOG
-A FORWARD -j LOG
(Active la journalisation sur les chaînes d'entrée et de transfert d'IPtables afin
que le démon PSAD puisse détecter toute activité anormale.)

*Ouvrir le fichier de configuration
principal du psad.conf ->		sudo vim /etc/psad/psad.conf

*Modifier les lignes suivantes ->	EMAIL_ADDRESSES		root@localhost;
					HOSTNAME		localhost;

Modifier ceci pour pointer vers le fichier syslog, où psad aura réellement
la possibilité de parcourir les journaux actifs ->
					ENABLE_SYSLOG_FILE	Y;
					IPT_WRITE_FWDATA	Y;
					IPT_SYSLOG_FILE		/var/log/syslog;

*Activer les paramètres suivants pour activer la fonction IPS et le niveau de danger.
Après avoir activé le paramètre dans le fichier de configuration, le démon PSAD bloquera
automatiquement l'attaquant en ajoutant son adresse IP dans les chaînes IPtables.
					ENABLE_AUTO_IDS		Y;
					AUTO_IDS_DANGER_LEVEL	1;

*Exécuter maintenant la commande
suivante pour mettre à jour la
base de données de signatures
pour la détection des attaques ->	psad --sig-update

*Redemarrer le service ->		sudo psad -R (restart)

*Afficher l'etat de tous les
proccessus en cours ->			sudo psad -S (status)

/***************************************************************************************************/

[Arrêter les services non utilisés pour ce projet]

*Lister les services disponibles
et répertorie l'état des services
contrôlés par le systeme ->		sudo systemctl list-units --type=service --state=active

ex:  	UNIT                               LOAD   ACTIVE SUB     DESCRIPTION
		---------------------------------------------------------------------
		apache2.service                    loaded active running The Apache HTTP Server
		console-setup.service              loaded active exited  Set console font and keyma
		dbus.service                       loaded active running D-Bus System Message Bus
		fail2ban.service                   loaded active running Fail2Ban Service
						...

*Stopper un service ->			sudo systemctl disable $nameofservice

Désactiver les services estimé non necéssaires ->

*console-setup.service : Ce paquet fournit à la console le même modèle
de configuration du clavier que celui du système X Window.

*keyboard-setup.service : configuration du clavier.

exim4 : Mail Transfert Agent (postfix est utilisé à la place).

/***************************************************************************************************/

[Réalisez un script qui met à jour l’ensemble des sources de package une fois
par semaine à 4h00 du matin età chaque reboot de la machine.]

[Cron] : est un programme qui permet aux utilisateurs des systèmes Unix
d’exécuter automatiquement des scripts, des commandes ou des logiciels à une
date et une heure spécifiée à l’avance.

*Ecriture du scipt :

*Ouvrir le fichier crontab ->		sudo crontab -e

*Y ajouter les lignes suivantes :

0 4 * * 1 apt-get update && ((date && apt-get -y upgrade; echo) >> /var/log/update_script.log 2>&1)

@reboot apt-get update && ((date && apt-get -y upgrade; echo) >> /var/log/update_script.log2>&1)

(Pour tester la commande sur le terminal il faut ajouter les droits d'écriture
pour les non-root au fichier update_script.log).

/***************************************************************************************************/

[Réalisez un script qui permet de surveiller les modifications du fichier /etc/crontab tous les jours à minuit.]

*Créer un fichier qui servira à
stocker ce que renvoie la commande md5sum ->	touch /etc/cron.d/md5_cron

*Taper la commande md5sum /etc/crontab
et stocker le resusltat dans le fichier
/etc/cron.d/md5_cron ->				sudo md5sum /etc/crontab > /etc/cron.d/md5_cron

*Ouvrir le fichier crontab ->			sudo crontab -e
*Y ajouter les lignes suivantes :

0 0 * * * md500=`cat /etc/cron.d/md5_cron`; md511=`md5sum /etc/crontab`; if [ "$md500" != "$md511" ];
 then md5sum /etc/crontab > /etc/cron.d/md5_cron; echo "WARNING - CRONTAB WAS MODIFIED\n" | mail -s
  "Crontab was modified" wana@localhost; fi

/***************************************************************************************************/



--------------------V.4 :

[Mettre en place un serveur web]

*Installer apache ->				sudo apt-get install apache2

*Generer un certificat auto signe ->		openssl genrsa -out mysite.key 2048
						openssl req -new -key mysite.key -out mysite.csr
						openssl x509 -req -days 365 -in mysite.csr -signkey mysite.key -out
						mysite.crt
						sudo systemctl restart apache2 (si demandé)
						sudo a2enmod rewrite
						sudo systemctl restart apache2 (si demandé)
						sudo a2enmod ssl
						sudo vim /etc/apache2/sites-available/000-default.conf

						<VirtualHost *:80>
							ServerName mysite.com
							ServerAlias www.mysite.com
							Redirect permanent / https://10.11.93.93
						</VirtualHost>

						<VirtualHost *:443>
							ServerAdmin webmaster@localhost
							DocumentRoot /var/www/html
							SSLEngine on
							SSLCertificateFile      /etc/ssl/mysite/mysite.crt
							SSLCertificateKeyfile   /etc/ssl/mysite/mysite.key
						</VirtualHost>

						sudo vim /etc/apache2/sites-available/default-ssl.conf

						SSLCertificateFile      /etc/ssl/mysite/mysite.crt
						SSLCertificateKeyfile   /etc/ssl/mysite/mysite.key

*Ajouter ces lignes dans le fichier de configuration IPtables ->
						sudo vim /etc/iptables/rules.v4

-A INPUT -p tcp --dport 443 -j ACCEPT
