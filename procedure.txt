# **************************************************************************** #
# **************************************************************************** #
# **************************************************************************** #
# **************************************************************************** #
# **************************************************************************** #

--------------------V.2 :
•[Mis a jour]:
	- apt-get update : (update)Permet de resynchroniser un fichier repertoriant les paquets disponibles
						et sa source. Elle doit etre executee avant (upgrade) pour que apt-get connaisse
						l'existence de nouvelles versions des paquets.

    - apt-get upgrade : (upgrade)Permet l'installation des versions les plus recentes de tous les paquets
						presents sur le systeme.


--------------------V.3 :
•[Creer/ ajouter un utilisateur non-root]:
	-adduser $username



•[SUDO]: (Substitute User Do)-> Commande permettant a un administrateur systeme d'accorder a certains
								utilisateur la possibilite de lancer une commande en tant qu'administrateur.

(commande suivante a effectuer en tant qu'administrateur)
*Installer SUDO-> 					apt-get install sudo
*Ajouter un utilisateur a sudo->	adduser $username sudo


/****************************************************************************************************/


•[DHCP]: (Dynamic Host Configuration Protocol)-> Protocole reseau dont le role est d'assurer la configuration
												automatique des parametres IP d'une station ou d'une machine,
												notamment en lui attribuant automatiquement une adresse IP
												et un masque de sous-reseau.
- Configuration de l'adresse IP pour la rendre fixe:
(commande suivante a effectuer en tant qu'administrateur)
*Ouvrir le fichier /etc/network/interfaces ->  sudo vim /etc/network/interfaces
*Modifier ces lignes						   auto eth0
											   iface eth0 inet dhcp

Par											   iface enp0s3 inet static
														adress 10.13.93.93
														netmask 255.255.255.252
														gateway 10.13.254.254
*Redemarrer le serivce reseau: sudo service networking restart
*Ou la machine :			   sudo reboot


/****************************************************************************************************/


•[SSH]: (Secure SHell) -> Secure Shell (SSH) est à la fois un programme informatique et un protocole de communication sécurisé.

*Changer le port par defaut du service ssh :
Ouvrir le fichier sshd_config ->				sudo vi /etc/ssh/sshd_config
#Port 22 -> Port 9393(par exemple).
(les ports disponibles sont au nombre de 65 536(2^16), 16 premiers bits en partant de droite. Les ports utilises par defaut par le systeme sont de 0 a 1023, 22 etant le port par defaut du service SSH).

*Interdire l'utilisateur root de se connecter en SSH :
Ouvrir le fichier sshd_config ->				sudo vi /etc/ssh/sshd_config
#PermitRootLogin without-password->				PermitRootLogin no

(A effectuer sur la machine locale)
*Generer une les keys ->							ssh-keygen
*Copier la cle sur le serveur pour l'autoriation ->	ssh-copy-id wana@10.13.93.93 -p 9393


*L'acces SSH doit se faire avec des publickeys :
Ouvrir le fichier sshd_config -> 			    sudo vi /    etc/ssh/sshd_config
#PasswordAuthentication yes->					PasswordAuthentication no

#PubkeyAuthentication yes->						PubkeyAuthentication yes

*Redemarrer le service: sudo sevice ssh restart


/****************************************************************************************************/

[Firewall]

*Installer iptables-persistent (version qui permet de rendre les modifications persistentent) --> sudo apt-get install iptables-persistent

*ouvrir le fichier rules.v4 --> sudo vim /etc/iptables/rules.v4
et configurer le firewall puis l'enregistrer (y ajouter les lignes suivantes) :

-F

-X

-P INPUT DROP
-P FORWARD DROP
-P OUTPUT DROP

-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
-A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT

-A INPUT -m state --state INVALID -j DROP
-A FORWARD -m state --state INVALID -j DROP
-A OUTPUT -m state --state INVALID -j DROP

-A INPUT -i lo -j ACCEPT
-AOUTPUT -o lo -j ACCEPT

-A OUTPUT -p tcp --dport 80 -j ACCEPT
-A INPUT -p tcp --dport 80 -j ACCEPT
-A OUTPUT -p tcp --dport 53 -j ACCEPT
-A OUTPUT -p udp --dport 53 -j ACCEPT
-A INPUT -p tcp --dport 443 -j ACCEPT (ligne a rajouter lors de la conf. SSL)

-A INPUT -p tcp --dport 9393 -j ACCEPT

-A INPUT -j LOG (ligne a rajouter lors de la conf. PSAD)
-A FORWARD -j LOG (ligne a rajouter lors de la conf. PSAD)

*redemmarer le service --> sudo service netfilter-persistent restart

*verifier le chargement des modifications --> sudo iptables -L

/****************************************************************************************************/

[Fail2ban] : Fail2ban est un framework de prévention contre les intrusions, Fail2ban bloque les adresses IP appartenant à des hôtes qui tentent de casser la sécurité du système, pendant une période configurable (mise en quarantaine).

*installer fail2ban --> sudo apt-get install fail2ban

*copier le fichier jail.conf --> sudo cp jail.conf jail.local (dans /etc/fail2ban/)
(le fichier jail.conf sera modifier a chaque mis a jour, donc pour un fichier fix, en creer un autre (jail.local)).

*y ajouter/modifier ces lignes:

action = %(action_mwl)s
...
[sshd]
enabled = true
maxretry = 3
port = 9393
logpath = %(sshd_log)
backend = %(sshd_backend)s



/***************************************************************************************************/

[Protection contre les scans]

*Scan : permet de trouver dans un délai très court, tous les ports ouverts sur une machine distante.

*PSAD : Port Scan Attack Detector.

*Installer PSAD --> sudo apt-get install psad

*Ajouter a IPtables ces deux lignes :
										-A INPUT -j LOG
										-A FORWARD -j LOG
(Active la journalisation sur les chaînes d'entrée et de transfert d'IPtables afin que le démon PSAD puisse détecter toute activité anormale.)

*Ouvrir le fichier de configuration principal du psad.conf --> sudo vim /etc/psad/psad.conf

*Modifier les lignes suivantes :
EMAIL_ADDRESSES --> root@localhost
HOSTNAME --> localhost

Modifiez ceci pour pointer vers le fichier syslog, où psad aura réellement la possibilité de parcourir les journaux actifs:
ENABLE_SYSLOG_FILE --> Y
IPT_WRITE_FWDATA --> Y
IPT_SYSLOG_FILE --> /var/log/syslog

*Activez les paramètres suivants pour activer la fonction IPS et le niveau de danger. Après avoir activé le paramètre dans le fichier de configuration, le démon PSAD bloquera automatiquement l'attaquant en ajoutant son adresse IP dans les chaînes IPtables.
ENABLE_AUTO_IDS --> Y
AUTO_IDS_DANGER_LEVEL --> 1

*Exécuter maintenant la commande suivante pour mettre à jour la base de données de signatures pour la détection des attaques --> psad --sig-update

*Redemarrer le service --> sudo psad -R (restart)

*Afficher l'etat de tous les proccessus en cours --> sudo psad -S (status)

/***************************************************************************************************/

*Lister les services disponibles et répertorie l'état des services contrôlés par le systeme --> sudo systemctl list-units --type=service --state=active
ex:  	UNIT                               LOAD   ACTIVE SUB     DESCRIPTION
		---------------------------------------------------------------------
		apache2.service                    loaded active running The Apache HTTP Server
		console-setup.service              loaded active exited  Set console font and keyma
		dbus.service                       loaded active running D-Bus System Message Bus
		fail2ban.service                   loaded active running Fail2Ban Service


*Stopper le service --> sudo systemctl disable $nameofservice$
--> desactiver les services suivant :

- console-setup.service --> Ce paquet fournit à la console le même modèle de configuration du clavier que celui du système X Window.

- keyboard-setup.service --> configuration du clavier.

- exim4 --> Mail Transfert Agent (postfix est utilise a la place).


/***************************************************************************************************/

[Cron] = cron est un programme qui permet aux utilisateurs des systèmes Unix d’exécuter automatiquement des scripts, des commandes ou des logiciels à une date et une heure spécifiée à l’avance.

*Ecriture du scipt :

- Ouvrir le fichier crontab -> sudo crontab -e
- Y ajouter les lignes suivantes :
0 4 * * 1 apt-get update && ((date && apt-get -y upgrade; echo) >> /var/log/update_script.log 2>&1)

@reboot apt-get update && ((date && apt-get -y upgrade; echo) >> /var/log/update_script.log2>&1)

(Pour tester la commande sur le shell il faut ajouter les droits d'ecriture pour les non-root)

/***************************************************************************************************/

- Creer un fichier qui servira a stocker ce que renvoie la commande md5sum ->
		fichier "md5_cron" cree dans   /etc/cron.d/md5_cron

- Taper la commande md5sum /etc/crontab et stocker le resusltat dans le fichier /etc/cron.d/md5_cron --> sudo md5sum /etc/crontab > /etc/cron.d/md5_cron

- Ouvrir le fichier crontab -> sudo crontab -e
- Y ajouter les lignes suivantes :
0 0 * * * md500=`cat /etc/cron.d/md5_cron`; md511=`md5sum /etc/crontab`; if [ "$md500" != "$md511" ]; then md5sum /etc/crontab > /etc/cron.d/md5_cron; echo "WARNING - CRONTAB WAS MODIFIED\n" | mail -s "Crontab was modified" wana@localhost; fi

/***************************************************************************************************/



--------------------V.4 :

*Installer apache :

sudo apt-get install apache2

*Generer un certificat auto signe :

openssl genrsa -out mysite.key 2048
openssl req -new -key mysite.key -out mysite.csr
openssl x509 -req -days 365 -in mysite.csr -signkey mysite.key -out mysite.crt
sudo systemctl restart apache2 (si demande)
sudo a2enmod rewrite
sudo systemctl restart apache2 (si demande)
sudo a2enmod ssl
sudo vim /etc/apache2/sites-available/000-default.conf

<VirtualHost *:80>
	ServerName mysite.com
	ServerAlias www.mysite.com
	Redirect permanent / https://10.12.93.93
</VirtualHost>

<VirtualHost *:443>
	ServerAdmin webmaster@localhost
	DocumentRoot /var/www/html
	SSLEngine on
	SSLCertificateFile      /etc/ssl/mysite/mysite.crt
	SSLCertificateKeyfile   /etc/ssl/mysite/mysite.key
	</VirtualHost>

sudo vim /etc/apache2/sites-available/default-ssl.conf

SSLCertificateFile      /etc/ssl/mysite/mysite.crt
SSLCertificateKeyfile   /etc/ssl/mysite/mysite.key

sudo vim /etc/iptables/rules.v4

-A INPUT -p tcp --dport 443 -j ACCEPT (ligne a ajouter)

